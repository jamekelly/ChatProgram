/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatprogramapplet;

import java.awt.event.ActionEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author James
 */
public class ChatProgramApplet extends javax.swing.JApplet{

    private Connection connection;

    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {

                public void run() {
                    initComponents();
                    launchconnection();
                    //serverMessagesArea.setText("ay");
                }
            });
        } catch (Exception ex) {
            serverMessagesArea.setText(ex.toString());
        }
    }


    private void launchconnection() {
        connection = new Connection(this, serverMessagesArea, messageArea);
        connection.start();
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        
        JFrame frame = new JFrame();
        handle = JOptionPane.showInputDialog(frame,
                                                    "Enter Your Nickname: ",
                                                    "Name Entry",
                                                    JOptionPane.PLAIN_MESSAGE);

        connectButton = new javax.swing.JButton();
        serverMessagesFieldLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        serverMessagesArea = new javax.swing.JTextArea();
        messageArea = new JTextArea(5, 50);
        messageArea.setWrapStyleWord(true);
        messageArea.setLineWrap(true);
        disconnectButton = new javax.swing.JButton();
        sendButton = new javax.swing.JButton();
        
        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                sendButtonActionPerformed(e);
            }
        });

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        serverMessagesFieldLabel.setText("Server Messages");

        serverMessagesArea.setColumns(20);
        serverMessagesArea.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        serverMessagesArea.setRows(5);
        jScrollPane1.setViewportView(serverMessagesArea);

        disconnectButton.setText("Disconnect");
        disconnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                    .addComponent(serverMessagesFieldLabel)
                    .addComponent(messageArea)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(connectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addComponent(disconnectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addComponent(sendButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serverMessagesFieldLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageArea)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(disconnectButton)
                    .addComponent(connectButton)
                    .addComponent(sendButton))
                .addGap(211, 211, 211))
        );
    }// </editor-fold>                        

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        if (!connection.isConnected()) {
            connection.connectToServer();
        }
}                                             

    private void disconnectButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        if (connection.isConnected()) {
            connection.disconnectFromServer();
        }
}
    
    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if(connection.isConnected()){
            connection.sendToServer();
        }
    }

    public void stop() {
        disconnectButtonActionPerformed(null);
    }
    
    public String getHandle() {
        return this.handle;
    }


    // Variables declaration - do not modify                     
    private javax.swing.JButton connectButton;
    private javax.swing.JButton disconnectButton;
    private javax.swing.JButton sendButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea serverMessagesArea;
    private javax.swing.JTextArea messageArea;
    private javax.swing.JLabel serverMessagesFieldLabel;
    private String handle;
    // End of variables declaration                   
    
}
